{"version":3,"sources":["webpack:///./src/components/Footer.tsx","webpack:///./src/components/icons/facebook.tsx","webpack:///./src/components/icons/twitter.tsx","webpack:///./src/components/subsribe/SubscribeLogo.tsx","webpack:///./src/components/subsribe/SubscribeOverlay.tsx","webpack:///./src/components/header/SiteNav.tsx","webpack:///./src/components/subsribe/SubscribeForm.tsx"],"names":["SiteFooter","Object","emotion__WEBPACK_IMPORTED_MODULE_0__","name","styles","SiteFooterContent","SiteFooterNav","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","target","Footer","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","className","outer","inner","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","config","title","Date","getFullYear","facebook","href","rel","twitter","Facebook","core_browser_esm","xmlns","viewBox","style","height","d","Twitter","SubscribeOverlayLogo","styled_base_browser_esm","SubscribeLogo","gatsby_browser_entry","query","render","data","logo","src","childImageSharp","fixed","alt","_1115645022","SubscribeOverlay","props","open","colors","midgrey","SubscribeOverlayClose","SubscribeOverlayContent","SubscribeOverlayTitle","SubscribeOverlayDescription","SubscribeModal","_this","_React$Component","call","this","escFunction","event","key","close","setState","isOpen","subscribeEsc","unsubscribeEsc","state","componentWillUnmount","document","addEventListener","removeEventListener","onClick","subsribe_SubscribeLogo","SubscribeForm","React","HomeNavRaise","emotion_esm","SiteNavStyles","SiteNavLeft","NavStyles","SiteNavRight","SocialLinks","SubscribeButton","SiteNav","subscribe","openModal","current","_this$props$isHome","isHome","SiteNavLogo","role","SocialLink","showSubscribe","subsribe_SubscribeOverlay","ref","SubscribeFormStyles","SubscribeEmail","lighten","lightgrey","darken","SubscribeFormButton","mix","blue","desaturate","FormGroup","action","mailchimpAction","method","id","noValidate","type","placeholder","position","left","aria-hidden","mailchimpName","tabIndex"],"mappings":"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","file":"2-b35227e405b4af1692f8.js","sourcesContent":["import { Link } from 'gatsby';\nimport { setLightness } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport { colors } from '../styles/colors';\nimport { outer, inner } from '../styles/shared';\nimport config from '../website-config';\n\nconst SiteFooter = css`\n  position: relative;\n  padding-top: 20px;\n  padding-bottom: 60px;\n  color: #fff;\n`;\n\nconst SiteFooterContent = css`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 1.3rem;\n  a {\n    color: rgba(255, 255, 255, 0.7);\n  }\n  a:hover {\n    color: rgba(255, 255, 255, 1);\n    text-decoration: none;\n  }\n  @media (max-width: 650px) {\n    flex-direction: column;\n  }\n`;\n\nconst SiteFooterNav = styled.nav`\n  display: flex;\n\n  a {\n    position: relative;\n    margin-left: 20px;\n  }\n\n  a:before {\n    content: '';\n    position: absolute;\n    top: 11px;\n    left: -11px;\n    display: block;\n    width: 2px;\n    height: 2px;\n    background: #fff;\n    border-radius: 100%;\n  }\n\n  a:first-of-type:before {\n    display: none;\n  }\n  @media (max-width: 650px) {\n    a:first-child {\n      margin-left: 0;\n    }\n  }\n`;\n\nconst Footer: React.FunctionComponent = () => {\n  return (\n    <footer className={`${outer} ${SiteFooter} sitefooter`}>\n      <div className={`${inner} ${SiteFooterContent}`}>\n        <section className=\"copyright\">\n          <Link to=\"/\">{config.title}</Link> &copy; {new Date().getFullYear()}\n        </section>\n        <SiteFooterNav className=\"sitefooternav\">\n          <Link to=\"/\">Latest News</Link>\n          {config.facebook && (\n            <a href={config.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n              Facebook\n            </a>\n          )}\n          {config.twitter && (\n            <a href={config.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n              Twitter\n            </a>\n          )}\n\n        </SiteFooterNav>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Facebook: React.FunctionComponent = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" style={{ height: '1.5rem' }}>\n    <path d=\"M19 6h5V0h-5c-3.86 0-7 3.14-7 7v3H8v6h4v16h6V16h5l1-6h-6V7c0-.542.458-1 1-1z\" />\n  </svg>\n);\nexport default Facebook;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Twitter: React.FunctionComponent = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n    <path d=\"M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z\" />\n  </svg>\n);\nexport default Twitter;\n","import { graphql, StaticQuery } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\n\nimport config from '../../website-config';\n\nconst SubscribeOverlayLogo = styled.img`\n  position: fixed;\n  top: 23px;\n  left: 30px;\n  height: 30px;\n`;\n\ninterface SiteNavLogoProps {\n  logo?: {\n    childImageSharp: {\n      fixed: any;\n    };\n  };\n}\n\nconst SubscribeLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query SubscribeOverlayLogo {\n        logo: file(relativePath: { eq: \"img/ghost-logo.png\" }) {\n          childImageSharp {\n            # Specify the image processing specifications right in the query.\n            # Makes it trivial to update as your page's design changes.\n            fixed {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    // tslint:disable-next-line:react-this-binding-issue\n    render={(data: SiteNavLogoProps) =>\n      data.logo && (\n        <SubscribeOverlayLogo src={data.logo.childImageSharp.fixed.src} alt={config.title} />\n      )\n    }\n  />\n);\n\nexport default SubscribeLogo;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport { colors } from '../../styles/colors';\nimport config from '../../website-config';\nimport SubscribeForm from './SubscribeForm';\nimport SubscribeLogo from './SubscribeLogo';\n\ninterface SubscribeOverlayProps {\n  open?: boolean;\n}\n\nconst SubscribeOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 9000;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(0, 25, 40, 0.97);\n  opacity: ${(props: SubscribeOverlayProps) => (props.open ? 1 : 0)};\n  transition: opacity 200ms ease-in;\n  pointer-events: ${(props: SubscribeOverlayProps) => (props.open ? 'auto' : 'none')};\n  backdrop-filter: blur(3px);\n\n  form {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n    max-width: 500px;\n  }\n\n  .form-group {\n    flex-grow: 1;\n  }\n\n  .subscribe-email {\n    display: block;\n    padding: 14px 20px;\n    width: 100%;\n    border: none;\n    color: ${colors.midgrey};\n    font-size: 2rem;\n    line-height: 1em;\n    font-weight: normal;\n    letter-spacing: 0.5px;\n    user-select: text;\n    border-radius: 8px;\n    transition: border-color 0.15s linear;\n\n    -webkit-appearance: none;\n  }\n\n  button {\n    display: inline-block;\n    margin: 0 0 0 15px;\n    padding: 0 25px;\n    height: 52px;\n    outline: none;\n    color: #fff;\n    font-size: 1.7rem;\n    line-height: 37px;\n    font-weight: 400;\n    text-align: center;\n    text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);\n    background: linear-gradient(\n      color(var(--blue) whiteness(+7%)),\n      color(var(--blue) lightness(-7%) saturation(-10%)) 60%,\n      color(var(--blue) lightness(-7%) saturation(-10%)) 90%,\n      color(var(--blue) lightness(-4%) saturation(-10%))\n    );\n    border-radius: 8px;\n    box-shadow: 0 0 0 1px inset rgba(0, 0, 0, 0.14);\n\n    -webkit-font-smoothing: subpixel-antialiased;\n  }\n`;\n\nconst SubscribeOverlayClose = styled.a`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: block;\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 40px;\n    right: 25px;\n    display: block;\n    width: 30px;\n    height: 2px;\n    background: #fff;\n    opacity: 0.8;\n    transform: rotate(45deg);\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 40px;\n    right: 25px;\n    display: block;\n    width: 30px;\n    height: 2px;\n    background: #fff;\n    opacity: 0.8;\n    transform: rotate(-45deg);\n  }\n\n  :hover {\n    cursor: default;\n  }\n`;\n\nconst SubscribeOverlayContent = styled.div`\n  position: relative;\n  z-index: 9999;\n  margin: 0 0 5vw 0;\n  padding: 4vw;\n  color: #fff;\n  text-align: center;\n`;\n\nconst SubscribeOverlayTitle = styled.h1`\n  display: inline-block;\n  margin: 0 0 10px 0;\n  font-size: 6rem;\n  line-height: 1.15em;\n`;\n\nconst SubscribeOverlayDescription = styled.p`\n  margin: 0 auto 50px;\n  max-width: 650px;\n  font-family: Georgia, serif;\n  font-size: 3rem;\n  line-height: 1.3em;\n  font-weight: 300;\n  opacity: 0.8;\n`;\n\ninterface SubscribeState {\n  isOpen: boolean;\n}\n\nclass SubscribeModal extends React.Component<any, SubscribeState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeEsc();\n  }\n\n  escFunction = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      this.close();\n    }\n  };\n\n  subscribeEsc() {\n    document.addEventListener('keydown', this.escFunction, false);\n  }\n\n  unsubscribeEsc() {\n    document.removeEventListener('keydown', this.escFunction, false);\n  }\n\n  open = () => {\n    this.setState({ isOpen: true });\n    this.subscribeEsc();\n  };\n\n  close = () => {\n    this.setState({ isOpen: false });\n    this.unsubscribeEsc();\n  };\n\n  render() {\n    return (\n      <SubscribeOverlay open={this.state.isOpen}>\n        <SubscribeOverlayClose onClick={this.close} />\n        <SubscribeOverlayContent>\n          <SubscribeLogo />\n          <SubscribeOverlayTitle>Stay informed about {config.title}</SubscribeOverlayTitle>\n          <SubscribeOverlayDescription>\n            Stay up to date about our events, social gatherings, workshops, scholarships and much more.\n          </SubscribeOverlayDescription>\n          <SubscribeForm />\n        </SubscribeOverlayContent>\n      </SubscribeOverlay>\n    );\n  }\n}\n\nexport default SubscribeModal;\n","// tslint:disable:no-http-string\nimport { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from 'emotion';\nimport \"../../styles/seed.less\"\n\nimport { SocialLink } from '../../styles/shared';\nimport config from '../../website-config';\nimport Facebook from '../icons/facebook';\nimport Twitter from '../icons/twitter';\nimport SubscribeModal from '../subsribe/SubscribeOverlay';\nimport SiteNavLogo from './SiteNavLogo';\n\nconst HomeNavRaise = css`\n  @media (min-width: 900px) {\n    position: relative;\n    top: -70px;\n  }\n`;\n\nconst SiteNavStyles = css`\n  position: relative;\n  z-index: 300;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  overflow-y: hidden;\n  height: 40px;\n  font-size: 1.2rem;\n`;\n\nconst SiteNavLeft = styled.div`\n  display: flex;\n  align-items: center;\n  overflow-x: auto;\n  overflow-y: hidden;\n  -webkit-overflow-scrolling: touch;\n  margin-right: 10px;\n  padding-bottom: 80px;\n  letter-spacing: 0.4px;\n  white-space: nowrap;\n\n  -ms-overflow-scrolling: touch;\n\n  @media (max-width: 700px) {\n    margin-right: 0;\n    padding-left: 4vw;\n  }\n`;\n\nconst NavStyles = css`\n  display: flex;\n  margin: 0 0 0 -12px;\n  padding: 0;\n  list-style: none;\n\n  li {\n    display: block;\n    margin: 0;\n    padding: 0;\n    text-transform: uppercase;\n  }\n\n  li a {\n    display: block;\n    margin: 0;\n    padding: 10px 12px;\n    color: #fff;\n    opacity: 0.8;\n  }\n\n  li a:hover {\n    text-decoration: none;\n    opacity: 1;\n  }\n`;\n\nconst SiteNavRight = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  height: 40px;\n\n  @media (max-width: 700px) {\n    display: none;\n  }\n`;\n\nconst SocialLinks = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  a:last-of-type {\n    padding-right: 20px;\n  }\n`;\n\nconst SubscribeButton = styled.a`\n  display: block;\n  padding: 4px 10px;\n  border: #fff 1px solid;\n  color: #fff;\n  font-size: 1.2rem;\n  line-height: 1em;\n  border-radius: 10px;\n  opacity: 0.8;\n\n  :hover {\n    text-decoration: none;\n    opacity: 1;\n    cursor: pointer;\n  }\n`;\n\ninterface SiteNavProps {\n  isHome?: boolean;\n}\n\ninterface SiteNaveState {\n  isOpen: boolean;\n}\n\nclass SiteNav extends React.Component<SiteNavProps, SiteNaveState> {\n  subscribe = React.createRef<SubscribeModal>();\n\n  constructor(props: SiteNavProps) {\n    super(props);\n    this.state = { isOpen: false };\n  }\n  openModal = () => {\n    if (this.subscribe.current) {\n      this.subscribe.current.open();\n    }\n  };\n\n  render() {\n    const { isHome = false } = this.props;\n    return (\n      <nav className={`${isHome ? HomeNavRaise : ''} ${SiteNavStyles}`}>\n        <SiteNavLeft>\n          {!isHome && <SiteNavLogo />}\n          <ul className={`${NavStyles}`} role=\"menu\">\n            {/* TODO: mark current nav item - add class nav-current */}\n            <li role=\"menuitem\">\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li role=\"menuitem\">\n              <Link to=\"/fellowship\">Fellowship</Link>\n            </li>\n            <li role=\"menuitem\">\n              <Link to=\"/tags/events/\">Events</Link>\n            </li>\n          </ul>\n        </SiteNavLeft>\n        <SiteNavRight>\n          <SocialLinks>\n            {config.facebook && (\n              <a\n                className={`${SocialLink}`}\n                href={config.facebook}\n                target=\"_blank\"\n                title=\"Facebook\"\n                rel=\"noopener noreferrer\"\n              >\n                <Facebook />\n              </a>\n            )}\n            {config.twitter && (\n              <a\n                className={`${SocialLink}`}\n                href={config.twitter}\n                title=\"Twitter\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Twitter />\n              </a>\n            )}\n          </SocialLinks>\n          {config.showSubscribe && (\n            <SubscribeButton onClick={this.openModal}>Subscribe</SubscribeButton>\n          )}\n          {config.showSubscribe && <SubscribeModal ref={this.subscribe} />}\n        </SiteNavRight>\n      </nav>\n    );\n  }\n}\n\nexport default SiteNav;\n","import { darken, desaturate, lighten, mix } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled'\nimport { css } from 'emotion'\n\nimport { colors } from '../../styles/colors';\nimport config from '../../website-config';\n\n\nconst SubscribeFormStyles = css`\n  @media (max-width: 500px) {\n    -ms-flex-direction: column;\n    flex-direction: column;\n  }\n`;\n\nconst SubscribeEmail = styled.input`\n  display: block;\n  padding: 10px;\n  width: 100%;\n  /* border: color(var(--lightgrey) l(+7%)) 1px solid; */\n  border: ${lighten('0.07', colors.lightgrey)};\n  color: ${colors.midgrey};\n  font-size: 1.8rem;\n  line-height: 1em;\n  font-weight: normal;\n  user-select: text;\n  border-radius: 5px;\n  transition: border-color 0.15s linear;\n\n  -webkit-appearance: none;\n  :focus {\n    outline: 0;\n    /* border-color: color(var(--lightgrey) l(-2%)); */\n    border-color: ${darken('0.02', colors.lightgrey)};\n  }\n`;\n\nconst SubscribeFormButton = styled.button`\n  display: inline-block;\n  margin: 0 0 0 10px;\n  padding: 0 20px;\n  height: 41px;\n  outline: none;\n  color: #fff;\n  font-size: 1.5rem;\n  line-height: 37px;\n  font-weight: 400;\n  text-align: center;\n  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);\n  /* background: linear-gradient(\n    color(var(--blue) whiteness(+7%)),\n    color(var(--blue) lightness(-7%) saturation(-10%)) 60%,\n    color(var(--blue) lightness(-7%) saturation(-10%)) 90%,\n    color(var(--blue) lightness(-4%) saturation(-10%))\n  ); */\n  background: linear-gradient(\n    ${mix('0.1', '#fff', colors.blue)},\n    ${desaturate('0.1', darken('0.07', colors.blue))} 60%,\n    ${desaturate('0.1', darken('0.07', colors.blue))} 90%,\n    ${desaturate('0.1', darken('0.04', colors.blue))}\n  );\n  border-radius: 5px;\n  box-shadow: 0 0 0 1px inset rgba(0, 0, 0, 0.14);\n\n  -webkit-font-smoothing: subpixel-antialiased;\n\n  :active,\n  :focus {\n    /* background: color(var(--blue) lightness(-9%) saturation(-10%)); */\n    background: ${desaturate('0.1', darken('0.09', colors.blue))};\n  }\n  @media (max-width: 500px) {\n    margin: 10px 0 0;\n    width: 100%;\n  }\n`;\n\nconst FormGroup = styled.div`\n  flex-grow: 1;\n  @media (max-width: 500px) {\n    width: 100%;\n  }\n`;\n\nconst SubscribeForm: React.FunctionComponent = () => {\n  return (\n      <form\n        className={`${SubscribeFormStyles}`}\n        action={config.mailchimpAction}\n        method=\"post\"\n        id=\"mc-embedded-subscribe-form\"\n        name=\"mc-embedded-subscribe-form\"\n        target=\"_blank\"\n        noValidate\n      >\n        {/* This is required for the form to work correctly  */}\n        <FormGroup className=\"form-group\">\n          <SubscribeEmail className=\"subscribe-email\" type=\"email\" name=\"EMAIL\" placeholder=\"youremail@example.com\" />\n        </FormGroup>\n        <div style={{ position: 'absolute', left: '-5000px' }} aria-hidden=\"true\">\n          <input type=\"text\" name={config.mailchimpName} tabIndex={-1} />\n        </div>\n        <SubscribeFormButton type=\"submit\">\n          <span>Subscribe</span>\n        </SubscribeFormButton>\n      </form>\n  );\n};\n\nexport default SubscribeForm;\n"],"sourceRoot":""}